//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteNETCSharp.ServicioWebSOAPInventario {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ws/", ConfigurationName="ServicioWebSOAPInventario.WSInventario")]
    public interface WSInventario {
        
        // CODEGEN: Se está generando un contrato de mensaje, ya que el nombre de elemento nombre del espacio de nombres  no está marcado para aceptar valores nil.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws/WSInventario/consultarProductoRequest", ReplyAction="http://ws/WSInventario/consultarProductoResponse")]
        ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoResponse consultarProducto(ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws/WSInventario/consultarProductoRequest", ReplyAction="http://ws/WSInventario/consultarProductoResponse")]
        System.Threading.Tasks.Task<ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoResponse> consultarProductoAsync(ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoRequest request);
        
        // CODEGEN: Se está generando un contrato de mensaje, ya que el espacio de nombres de partes de mensaje () no coincide con el valor predeterminado (http://ws/).
        [System.ServiceModel.OperationContractAttribute(Action="http://ws/WSInventario/calcularTotalRequest", ReplyAction="http://ws/WSInventario/calcularTotalResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        ClienteNETCSharp.ServicioWebSOAPInventario.calcularTotalResponse calcularTotal(ClienteNETCSharp.ServicioWebSOAPInventario.calcularTotalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws/WSInventario/calcularTotalRequest", ReplyAction="http://ws/WSInventario/calcularTotalResponse")]
        System.Threading.Tasks.Task<ClienteNETCSharp.ServicioWebSOAPInventario.calcularTotalResponse> calcularTotalAsync(ClienteNETCSharp.ServicioWebSOAPInventario.calcularTotalRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class consultarProductoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="consultarProducto", Namespace="http://ws/", Order=0)]
        public ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoRequestBody Body;
        
        public consultarProductoRequest() {
        }
        
        public consultarProductoRequest(ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class consultarProductoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string nombre;
        
        public consultarProductoRequestBody() {
        }
        
        public consultarProductoRequestBody(string nombre) {
            this.nombre = nombre;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class consultarProductoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="consultarProductoResponse", Namespace="http://ws/", Order=0)]
        public ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoResponseBody Body;
        
        public consultarProductoResponse() {
        }
        
        public consultarProductoResponse(ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="")]
    public partial class consultarProductoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string @return;
        
        public consultarProductoResponseBody() {
        }
        
        public consultarProductoResponseBody(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="calcularTotal", WrapperNamespace="http://ws/", IsWrapped=true)]
    public partial class calcularTotalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int cantidad;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public double precioUnitario;
        
        public calcularTotalRequest() {
        }
        
        public calcularTotalRequest(int cantidad, double precioUnitario) {
            this.cantidad = cantidad;
            this.precioUnitario = precioUnitario;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="calcularTotalResponse", WrapperNamespace="http://ws/", IsWrapped=true)]
    public partial class calcularTotalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public double @return;
        
        public calcularTotalResponse() {
        }
        
        public calcularTotalResponse(double @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WSInventarioChannel : ClienteNETCSharp.ServicioWebSOAPInventario.WSInventario, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSInventarioClient : System.ServiceModel.ClientBase<ClienteNETCSharp.ServicioWebSOAPInventario.WSInventario>, ClienteNETCSharp.ServicioWebSOAPInventario.WSInventario {
        
        public WSInventarioClient() {
        }
        
        public WSInventarioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSInventarioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSInventarioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSInventarioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoResponse ClienteNETCSharp.ServicioWebSOAPInventario.WSInventario.consultarProducto(ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoRequest request) {
            return base.Channel.consultarProducto(request);
        }
        
        public string consultarProducto(string nombre) {
            ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoRequest inValue = new ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoRequest();
            inValue.Body = new ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoRequestBody();
            inValue.Body.nombre = nombre;
            ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoResponse retVal = ((ClienteNETCSharp.ServicioWebSOAPInventario.WSInventario)(this)).consultarProducto(inValue);
            return retVal.Body.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoResponse> ClienteNETCSharp.ServicioWebSOAPInventario.WSInventario.consultarProductoAsync(ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoRequest request) {
            return base.Channel.consultarProductoAsync(request);
        }
        
        public System.Threading.Tasks.Task<ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoResponse> consultarProductoAsync(string nombre) {
            ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoRequest inValue = new ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoRequest();
            inValue.Body = new ClienteNETCSharp.ServicioWebSOAPInventario.consultarProductoRequestBody();
            inValue.Body.nombre = nombre;
            return ((ClienteNETCSharp.ServicioWebSOAPInventario.WSInventario)(this)).consultarProductoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ClienteNETCSharp.ServicioWebSOAPInventario.calcularTotalResponse ClienteNETCSharp.ServicioWebSOAPInventario.WSInventario.calcularTotal(ClienteNETCSharp.ServicioWebSOAPInventario.calcularTotalRequest request) {
            return base.Channel.calcularTotal(request);
        }
        
        public double calcularTotal(int cantidad, double precioUnitario) {
            ClienteNETCSharp.ServicioWebSOAPInventario.calcularTotalRequest inValue = new ClienteNETCSharp.ServicioWebSOAPInventario.calcularTotalRequest();
            inValue.cantidad = cantidad;
            inValue.precioUnitario = precioUnitario;
            ClienteNETCSharp.ServicioWebSOAPInventario.calcularTotalResponse retVal = ((ClienteNETCSharp.ServicioWebSOAPInventario.WSInventario)(this)).calcularTotal(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ClienteNETCSharp.ServicioWebSOAPInventario.calcularTotalResponse> ClienteNETCSharp.ServicioWebSOAPInventario.WSInventario.calcularTotalAsync(ClienteNETCSharp.ServicioWebSOAPInventario.calcularTotalRequest request) {
            return base.Channel.calcularTotalAsync(request);
        }
        
        public System.Threading.Tasks.Task<ClienteNETCSharp.ServicioWebSOAPInventario.calcularTotalResponse> calcularTotalAsync(int cantidad, double precioUnitario) {
            ClienteNETCSharp.ServicioWebSOAPInventario.calcularTotalRequest inValue = new ClienteNETCSharp.ServicioWebSOAPInventario.calcularTotalRequest();
            inValue.cantidad = cantidad;
            inValue.precioUnitario = precioUnitario;
            return ((ClienteNETCSharp.ServicioWebSOAPInventario.WSInventario)(this)).calcularTotalAsync(inValue);
        }
    }
}
